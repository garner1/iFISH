bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr13_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr13_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr13_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr15_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr15_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr15_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr17_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr17_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr17_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr19_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr19_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr19_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr22_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr22_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr22_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr21_allele1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr21_d1.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette of two alleles", ylim = c(0,0.5))
files <- list.files(path="/home/garner1/Work/dataset/iFISH/for_silvano_NEW/chr21_allele2", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
points(tseq,bootLand[["mean"]],lwd = 2, col = 2, ylim = c(0,0.5))
dev.off()
################################################################
library("TDA")
library("scatterplot3d")
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 0
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
maxscale
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = TRUE)
library("TDA")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
library("TDA")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("FNN")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages(c("igraph","RcppEigen"))
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("igraph")
R -e "install.packages('igraph', repos='http://cran.rstudio.com/')"
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages(pkgs = "scales")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("devtools")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install.packages("devtools")
install.packages("devtools")
install.packages("~/Downloads/TDA_1.6.tar.gz",repos = NULL, type="source")
install_version('TDA', version='1.4.1')
install.packages("~/Downloads/TDA_1.4.1.tar.gz",repos = NULL, type="source")
install.packages("scatterplot3d")
library("TDA")
library("scatterplot3d")
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
# png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
dev.off()
l
max(l)
maxscale = max(l)/2 # set maxscale to half of max distance
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
# png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
hdim = 0
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
# png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 0
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
# png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette", ylim = c(0,0.5))
plot(tseq, bootLand[["mean"]], main="Mean Silhouette")
hdim = 1
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
# png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette")
library("TDA")
library("scatterplot3d")
# SET ylim, hdim and title of the output file to switch between hdim 0 and 1
files <- list.files(path="/home/garner1/Work/dataset/iFISH/G1_cells_only/numbClusters_2/chr1", pattern=NULL, full.names=T, recursive=FALSE)
ind = 0
l = c()
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
l[ind] <- max(dist(X,method = "euclidean")) #find max distance in cloud
}
maxscale = max(l)/2 # set maxscale to half of max distance
tseq <- seq(0,maxscale,length=1*maxscale)
Sil <- matrix(0, nrow=length(files), ncol = length(tseq))
hdim = 0
p = 1
ind = 0
for (x in files) {
ind = ind+1
X <- as.matrix(read.table(x, sep=" "))
# cat(ind, " of ", length(files)," and max dist equal to ", max(dist(X,method = "euclidean")),"\n")
Diag <- ripsDiag(X=X,maxdimension=1, maxscale=maxscale,library = "GUDHI",printProgress = TRUE)
Sil[ind, ] <- silhouette(Diag[["diagram"]],dimension = hdim, p = p, tseq)
}
png("chr1_d0.png")
bootLand <- multipBootstrap(Sil, B = 100, alpha = 0.05, parallel = TRUE, printProgress = FALSE)
plot(tseq, bootLand[["mean"]], main="Mean Silhouette")
dev.off()
################################################################################
source('~/Dropbox/pipelines/iFISH/silhouette_plot.R')
source('~/Dropbox/pipelines/iFISH/silhouette_plot.R')
source('~/Dropbox/pipelines/iFISH/silhouette_plot.R')
source('~/Dropbox/pipelines/iFISH/silhouette_plot.R')
